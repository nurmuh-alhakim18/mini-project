// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String

  // Define relation
  Users User[]
}

model EventCategory {
  id   Int    @id @default(autoincrement())
  name String

  // Define relation
  Events Event[]
}

model TransactionStatus {
  id   Int    @id @default(autoincrement())
  name String

  // Define relation
  Transactions Transaction[]
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  name      String
  roleId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Set foreign key
  role Role @relation(fields: [roleId], references: [id])

  // Define relation
  Events       Event[]
  Transactions Transaction[]
  Reviews      Review[]
}

model Event {
  id             Int      @id @default(autoincrement())
  categoryId     Int
  organizerId    Int
  img            String?
  name           String
  isFree         Boolean
  price          Float?
  date           DateTime
  startTime      String
  endTime        String
  location       String
  description    String   @db.Text
  availableSeats Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  // Set foreign key
  category  EventCategory @relation(fields: [categoryId], references: [id])
  organizer User          @relation(fields: [organizerId], references: [id])

  // Define relation
  Transactions Transaction[]
  Promotions   Promotion[]
  Reviews      Review[]
}

model Transaction {
  id                  Int      @id @default(autoincrement())
  userId              Int
  eventId             Int
  transactionStatusId Int
  quantity            Int
  totalPrice          Float
  discountCode        String?
  discountPercentage  Int?
  discountAmount      Float?
  finalPrice          Float
  transactionDate     DateTime @default(now())
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Set foreign key
  user              User              @relation(fields: [userId], references: [id])
  event             Event             @relation(fields: [eventId], references: [id])
  TransactionStatus TransactionStatus @relation(fields: [transactionStatusId], references: [id])
}

model Promotion {
  id                 Int      @id @default(autoincrement())
  eventId            Int
  code               String   @unique
  discountPercentage Int
  startDate          DateTime
  endDate            DateTime
  quantity           Int
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Set foreign key
  event Event @relation(fields: [eventId], references: [id])
}

model Review {
  id        Int      @id @default(autoincrement())
  userId    Int
  eventId   Int
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Set foreign key
  user  User  @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
}
